#BlueJ class context
comment0.target=JSONStringer
comment0.text=\r\n\ JSONStringer\ provides\ a\ quick\ and\ convenient\ way\ of\ producing\ JSON\ text.\r\n\ The\ texts\ produced\ strictly\ conform\ to\ JSON\ syntax\ rules.\ No\ whitespace\ is\r\n\ added,\ so\ the\ results\ are\ ready\ for\ transmission\ or\ storage.\ Each\ instance\ of\r\n\ JSONStringer\ can\ produce\ one\ JSON\ text.\r\n\ <p>\r\n\ A\ JSONStringer\ instance\ provides\ a\ <code>value</code>\ method\ for\ appending\r\n\ values\ to\ the\r\n\ text,\ and\ a\ <code>key</code>\r\n\ method\ for\ adding\ keys\ before\ values\ in\ objects.\ There\ are\ <code>array</code>\r\n\ and\ <code>endArray</code>\ methods\ that\ make\ and\ bound\ array\ values,\ and\r\n\ <code>object</code>\ and\ <code>endObject</code>\ methods\ which\ make\ and\ bound\r\n\ object\ values.\ All\ of\ these\ methods\ return\ the\ JSONWriter\ instance,\r\n\ permitting\ cascade\ style.\ For\ example,\ <pre>\r\n\ myString\ \=\ new\ JSONStringer()\r\n\ \ \ \ \ .object()\r\n\ \ \ \ \ \ \ \ \ .key("JSON")\r\n\ \ \ \ \ \ \ \ \ .value("Hello,\ World\!")\r\n\ \ \ \ \ .endObject()\r\n\ \ \ \ \ .toString();</pre>\ which\ produces\ the\ string\ <pre>\r\n\ {"JSON"\:"Hello,\ World\!"}</pre>\r\n\ <p>\r\n\ The\ first\ method\ called\ must\ be\ <code>array</code>\ or\ <code>object</code>.\r\n\ There\ are\ no\ methods\ for\ adding\ commas\ or\ colons.\ JSONStringer\ adds\ them\ for\r\n\ you.\ Objects\ and\ arrays\ can\ be\ nested\ up\ to\ 20\ levels\ deep.\r\n\ <p>\r\n\ This\ can\ sometimes\ be\ easier\ than\ using\ a\ JSONObject\ to\ build\ a\ string.\r\n\ @author\ JSON.org\r\n\ @version\ 2015-12-09\r\n
comment1.params=
comment1.target=JSONStringer()
comment1.text=\r\n\ Make\ a\ fresh\ JSONStringer.\ It\ can\ be\ used\ to\ build\ one\ JSON\ text.\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\r\n\ Return\ the\ JSON\ text.\ This\ method\ is\ used\ to\ obtain\ the\ product\ of\ the\r\n\ JSONStringer\ instance.\ It\ will\ return\ <code>null</code>\ if\ there\ was\ a\r\n\ problem\ in\ the\ construction\ of\ the\ JSON\ text\ (such\ as\ the\ calls\ to\r\n\ <code>array</code>\ were\ not\ properly\ balanced\ with\ calls\ to\r\n\ <code>endArray</code>).\r\n\ @return\ The\ JSON\ text.\r\n
numComments=3
