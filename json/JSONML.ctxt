#BlueJ class context
comment0.target=JSONML
comment0.text=\r\n\ This\ provides\ static\ methods\ to\ convert\ an\ XML\ text\ into\ a\ JSONArray\ or\r\n\ JSONObject,\ and\ to\ covert\ a\ JSONArray\ or\ JSONObject\ into\ an\ XML\ text\ using\r\n\ the\ JsonML\ transform.\r\n\r\n\ @author\ JSON.org\r\n\ @version\ 2016-01-30\r\n
comment1.params=x\ arrayForm\ ja\ keepStrings
comment1.target=java.lang.Object\ parse(XMLTokener,\ boolean,\ JSONArray,\ boolean)
comment1.text=\r\n\ Parse\ XML\ values\ and\ store\ them\ in\ a\ JSONArray.\r\n\ @param\ x\ \ \ \ \ \ \ The\ XMLTokener\ containing\ the\ source\ string.\r\n\ @param\ arrayForm\ true\ if\ array\ form,\ false\ if\ object\ form.\r\n\ @param\ ja\ \ \ \ \ \ The\ JSONArray\ that\ is\ containing\ the\ current\ tag\ or\ null\r\n\ \ \ \ \ if\ we\ are\ at\ the\ outermost\ level.\r\n\ @param\ keepStrings\tDon't\ type-convert\ text\ nodes\ and\ attribute\ values\r\n\ @return\ A\ JSONArray\ if\ the\ value\ is\ the\ outermost\ tag,\ otherwise\ null.\r\n\ @throws\ JSONException\r\n
comment10.params=ja
comment10.target=java.lang.String\ toString(JSONArray)
comment10.text=\r\n\ Reverse\ the\ JSONML\ transformation,\ making\ an\ XML\ text\ from\ a\ JSONArray.\r\n\ @param\ ja\ A\ JSONArray.\r\n\ @return\ An\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ string\r\n
comment11.params=jo
comment11.target=java.lang.String\ toString(JSONObject)
comment11.text=\r\n\ Reverse\ the\ JSONML\ transformation,\ making\ an\ XML\ text\ from\ a\ JSONObject.\r\n\ The\ JSONObject\ must\ contain\ a\ "tagName"\ property.\ If\ it\ has\ children,\r\n\ then\ it\ must\ have\ a\ "childNodes"\ property\ containing\ an\ array\ of\ objects.\r\n\ The\ other\ properties\ are\ attributes\ with\ string\ values.\r\n\ @param\ jo\ A\ JSONObject.\r\n\ @return\ An\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ string\r\n
comment2.params=string
comment2.target=JSONArray\ toJSONArray(java.lang.String)
comment2.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONArray\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONArray\ in\ which\ the\ first\ element\ is\ the\ tag\ name.\ If\ the\ tag\ has\r\n\ attributes,\ then\ the\ second\ element\ will\ be\ JSONObject\ containing\ the\r\n\ name/value\ pairs.\ If\ the\ tag\ contains\ children,\ then\ strings\ and\r\n\ JSONArrays\ will\ represent\ the\ child\ tags.\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ string\ The\ source\ string.\r\n\ @return\ A\ JSONArray\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONArray\r\n
comment3.params=string\ keepStrings
comment3.target=JSONArray\ toJSONArray(java.lang.String,\ boolean)
comment3.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONArray\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONArray\ in\ which\ the\ first\ element\ is\ the\ tag\ name.\ If\ the\ tag\ has\r\n\ attributes,\ then\ the\ second\ element\ will\ be\ JSONObject\ containing\ the\r\n\ name/value\ pairs.\ If\ the\ tag\ contains\ children,\ then\ strings\ and\r\n\ JSONArrays\ will\ represent\ the\ child\ tags.\r\n\ As\ opposed\ to\ toJSONArray\ this\ method\ does\ not\ attempt\ to\ convert\ \r\n\ any\ text\ node\ or\ attribute\ value\ to\ any\ type\ \r\n\ but\ just\ leaves\ it\ as\ a\ string.\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ string\ The\ source\ string.\r\n\ @param\ keepStrings\ If\ true,\ then\ values\ will\ not\ be\ coerced\ into\ boolean\r\n\ \ or\ numeric\ values\ and\ will\ instead\ be\ left\ as\ strings\r\n\ @return\ A\ JSONArray\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONArray\r\n
comment4.params=x\ keepStrings
comment4.target=JSONArray\ toJSONArray(XMLTokener,\ boolean)
comment4.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONArray\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONArray\ in\ which\ the\ first\ element\ is\ the\ tag\ name.\ If\ the\ tag\ has\r\n\ attributes,\ then\ the\ second\ element\ will\ be\ JSONObject\ containing\ the\r\n\ name/value\ pairs.\ If\ the\ tag\ contains\ children,\ then\ strings\ and\r\n\ JSONArrays\ will\ represent\ the\ child\ content\ and\ tags.\r\n\ As\ opposed\ to\ toJSONArray\ this\ method\ does\ not\ attempt\ to\ convert\ \r\n\ any\ text\ node\ or\ attribute\ value\ to\ any\ type\ \r\n\ but\ just\ leaves\ it\ as\ a\ string.\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ x\ An\ XMLTokener.\r\n\ @param\ keepStrings\ If\ true,\ then\ values\ will\ not\ be\ coerced\ into\ boolean\r\n\ \ or\ numeric\ values\ and\ will\ instead\ be\ left\ as\ strings\r\n\ @return\ A\ JSONArray\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONArray\r\n
comment5.params=x
comment5.target=JSONArray\ toJSONArray(XMLTokener)
comment5.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONArray\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONArray\ in\ which\ the\ first\ element\ is\ the\ tag\ name.\ If\ the\ tag\ has\r\n\ attributes,\ then\ the\ second\ element\ will\ be\ JSONObject\ containing\ the\r\n\ name/value\ pairs.\ If\ the\ tag\ contains\ children,\ then\ strings\ and\r\n\ JSONArrays\ will\ represent\ the\ child\ content\ and\ tags.\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ x\ An\ XMLTokener.\r\n\ @return\ A\ JSONArray\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONArray\r\n
comment6.params=string
comment6.target=JSONObject\ toJSONObject(java.lang.String)
comment6.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONObject\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONObject\ with\ a\ "tagName"\ property.\ If\ the\ tag\ has\ attributes,\ then\r\n\ the\ attributes\ will\ be\ in\ the\ JSONObject\ as\ properties.\ If\ the\ tag\r\n\ contains\ children,\ the\ object\ will\ have\ a\ "childNodes"\ property\ which\r\n\ will\ be\ an\ array\ of\ strings\ and\ JsonML\ JSONObjects.\r\n\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ string\ The\ XML\ source\ text.\r\n\ @return\ A\ JSONObject\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONObject\r\n
comment7.params=string\ keepStrings
comment7.target=JSONObject\ toJSONObject(java.lang.String,\ boolean)
comment7.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONObject\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONObject\ with\ a\ "tagName"\ property.\ If\ the\ tag\ has\ attributes,\ then\r\n\ the\ attributes\ will\ be\ in\ the\ JSONObject\ as\ properties.\ If\ the\ tag\r\n\ contains\ children,\ the\ object\ will\ have\ a\ "childNodes"\ property\ which\r\n\ will\ be\ an\ array\ of\ strings\ and\ JsonML\ JSONObjects.\r\n\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ string\ The\ XML\ source\ text.\r\n\ @param\ keepStrings\ If\ true,\ then\ values\ will\ not\ be\ coerced\ into\ boolean\r\n\ \ or\ numeric\ values\ and\ will\ instead\ be\ left\ as\ strings\r\n\ @return\ A\ JSONObject\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONObject\r\n
comment8.params=x
comment8.target=JSONObject\ toJSONObject(XMLTokener)
comment8.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONObject\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONObject\ with\ a\ "tagName"\ property.\ If\ the\ tag\ has\ attributes,\ then\r\n\ the\ attributes\ will\ be\ in\ the\ JSONObject\ as\ properties.\ If\ the\ tag\r\n\ contains\ children,\ the\ object\ will\ have\ a\ "childNodes"\ property\ which\r\n\ will\ be\ an\ array\ of\ strings\ and\ JsonML\ JSONObjects.\r\n\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ x\ An\ XMLTokener\ of\ the\ XML\ source\ text.\r\n\ @return\ A\ JSONObject\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONObject\r\n
comment9.params=x\ keepStrings
comment9.target=JSONObject\ toJSONObject(XMLTokener,\ boolean)
comment9.text=\r\n\ Convert\ a\ well-formed\ (but\ not\ necessarily\ valid)\ XML\ string\ into\ a\r\n\ JSONObject\ using\ the\ JsonML\ transform.\ Each\ XML\ tag\ is\ represented\ as\r\n\ a\ JSONObject\ with\ a\ "tagName"\ property.\ If\ the\ tag\ has\ attributes,\ then\r\n\ the\ attributes\ will\ be\ in\ the\ JSONObject\ as\ properties.\ If\ the\ tag\r\n\ contains\ children,\ the\ object\ will\ have\ a\ "childNodes"\ property\ which\r\n\ will\ be\ an\ array\ of\ strings\ and\ JsonML\ JSONObjects.\r\n\r\n\ Comments,\ prologs,\ DTDs,\ and\ <code>&lt;[\ [\ ]]></code>\ are\ ignored.\r\n\ @param\ x\ An\ XMLTokener\ of\ the\ XML\ source\ text.\r\n\ @param\ keepStrings\ If\ true,\ then\ values\ will\ not\ be\ coerced\ into\ boolean\r\n\ \ or\ numeric\ values\ and\ will\ instead\ be\ left\ as\ strings\r\n\ @return\ A\ JSONObject\ containing\ the\ structured\ data\ from\ the\ XML\ string.\r\n\ @throws\ JSONException\ Thrown\ on\ error\ converting\ to\ a\ JSONObject\r\n
numComments=12
